import java.util.Scanner;
import java.net.*;
import java.io.*;
import java.net.ServerSocket;


public class Servidor {

    public static void main(String[] args) throws IOException {


        ServerSocket ss = new ServerSocket(10000);

        while (true) {
            Socket s = null;
            int numcli = 0;
            try {

                while (numcli <= 0) {
                    s = ss.accept();

                    int pedro = numcli + 1;

                    System.out.println("Se conecto un cliente: " + s + "Hay " + pedro + " clientes");

                    //Flujos de entrada y salida
                    DataInputStream dis = new DataInputStream(s.getInputStream());
                    DataOutputStream dos = new DataOutputStream(s.getOutputStream());

                    //Objeto

                    Thread t = new ClientHandler(s, dis, dos);

                    //Invocando mÃ©todo start()
                    t.start();

                }
            } 
		catch (Exception e) {
                s.close();
                int alverto = numcli--;
                System.out.println("los clientes son:" + alverto);
                e.printStackTrace();
            }
        }
    }

    static class ClientHandler extends Thread {
        Scanner hola = new Scanner(System.in);
        final DataInputStream dis;
        final DataOutputStream dos;
        final Socket s;

        //Constructor
        public ClientHandler(Socket s, DataInputStream dis, DataOutputStream dos) {
            this.s = s;
            this.dis = dis;
            this.dos = dos;
        }

        public void run() {
            String received;
            int cont = 0;
            while (true) {
                while (cont == 0) {
                    try {
                        dos.writeUTF("escribi algo\n");

                        received = dis.readUTF();
                        if (received.equals("Exit")) {
                            System.out.println("Client " + this.s + " sends exit...");
                            System.out.println("Closing this connection.");
                            this.s.close();
                            System.out.println("Connection closed");
                            break;
                        }
                        switch (received) {
                            default:
                                System.out.println("cliente: " + received);
                                String mensaje = hola.nextLine();
                                dos.writeUTF("Server: " + mensaje);
                                break;
                        }
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                    cont++;
                }
                while (cont > 0) {
                    try {
                        dos.writeUTF("------\n" + "");
                        received = dis.readUTF();

                        if (received.equals("Exit")) {
                            System.out.println("Client " + this.s + " sends exit...");
                            System.out.println("Closing this connection.");
                            this.s.close();
                            System.out.println("Connection closed");
                            break;
                        }
                        switch (received) {
                            default:
                                System.out.println("cliente: " + received);
                                String mensaje = hola.nextLine();
                                dos.writeUTF("Server: " + mensaje);
                                break;
                        }
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                    cont++;
                }
                try {
                    //Cierre de recursos
                    this.dis.close();
                    this.dos.close();

                } catch (IOException e) {
                    e.printStackTrace();
                }

            }
        }
    }
}